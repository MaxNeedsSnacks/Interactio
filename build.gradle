buildscript {
    repositories {
        maven {
            url = 'https://files.minecraftforge.net/maven'
        }
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '3.+', changing: true
    }
}

plugins {
    id 'io.franzbecker.gradle-lombok' version '2.0'
    id "com.wynprice.cursemaven" version "2.1.1"

    id 'maven-publish'
}

apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'eclipse'

lombok {
    version = '1.18.10'
    sha256 = ""
}

group = "${groupid}.${modid}" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = 'Interactio'

def test_mods = true

def buildNo = "1.3.2"
version = "${mc_ver}-${buildNo}"

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.

repositories {

    maven {
        url = "https://maven.tterrag.com/" // yarn2mcp
    }

    maven {
        // location of the maven that hosts JEI files
        name = "Progwml6 maven"
        url = "https://dvs1.progwml6.com/files/maven/"
    }
}

minecraft {

    mappings channel: 'snapshot', version: project.mappings_ver
    // makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.

    accessTransformer = file('src/main/resources/META-INF/at.cfg')

    runs {
        client {
            workingDirectory project.file('run')

            // property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'

            mods {
                "${modid}" {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')

            // property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'

            mods {
                "${modid}" {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')

            // property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'

            args '--mod', modid, '--all', '--output', file('src/generated/resources/')

            mods {
                "${modid}" {
                    source sourceSets.main
                }
            }
        }
    }

}

dependencies {

    minecraft "net.minecraftforge:forge:${mc_ver}-${forge_ver}"

    // JEI
    if (project.hasProperty("jei_version")) {
        // compile against the JEI API but do not include it at runtime
        compileOnly fg.deobf("mezz.jei:jei-${mc_ver}:${jei_version}:api")
        // at runtime, use the full JEI jar
        runtimeOnly fg.deobf("mezz.jei:jei-${mc_ver}:${jei_version}")
    }

    if (test_mods) {
        runtimeOnly fg.deobf("curse.maven:silents-mechanisms:2875059")
        runtimeOnly fg.deobf("curse.maven:silentlib:2873131")

        runtimeOnly fg.deobf("curse.maven:industrial-foregoing:2873796")
        runtimeOnly fg.deobf("curse.maven:titanium:2873789")

        runtimeOnly fg.deobf("curse.maven:nbt-tooltips:2844123")
    }

}

// Example for how to get properties into the manifest for reading by the runtime..
jar {
    manifest {
        attributes([
                "Specification-Title"     : "${modid}",
                "Specification-Vendor"    : "MaxNeedsSnacks",
                "Specification-Version"   : "1", // We are version 1 of ourselves
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : "${version}",
                "Implementation-Vendor"   : "MaxNeedsSnacks",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

def reobfFile = file("$buildDir/reobfJar/output.jar")
def reobfArtifact = artifacts.add('default', reobfFile) {
    type = 'jar'
    builtBy 'reobfJar'
}
publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact reobfArtifact
        }
    }
    repositories {
        maven {
            url "file:///${project.projectDir}/mcmodsrepo"
        }
    }
}